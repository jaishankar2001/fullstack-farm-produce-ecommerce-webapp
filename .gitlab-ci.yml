stages:          
  - build
  - test
  - publish
  - deploy

build: 
  stage: build
  image: maven:latest
  script: 
    - cd backend/
    - echo "Building Application"
    - mvn clean package
    - echo "Building Complete"
  only:
    - develop

test: 
  stage: test
  image: maven:latest
  script: 
    - echo "Testing backend..."
    - cd backend
    - mvn clean install
    - echo "Testing backend Completed..."
  only:
    - develop

publish:
  image: docker:latest
  stage: publish
  tags: 
    - ecopick
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: "tcp://docker:2375"
  services:
    - docker:dind
  script:
    - cd backend/
    - pwd 
    - echo $SERVER_IP
    - docker --version
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
    - docker build -t docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA -f ./Dockerfile .
    - docker push docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA
  only:
    - develop



deploy:
  image: alpine:latest
  stage: deploy
  tags: 
    - ecopick
  script:
   - cd backend/
   - echo "Deploying Backend..."
   - chmod og= $ID_RSA
   - apk update && apk add openssh-client
   - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
   - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA"
   - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f tanuj3920/ecopick-backend || true"
   - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8080:8080 --name tanuj3920/ecopick-backend docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA"
  only: 
  - develop
