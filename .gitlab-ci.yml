stages:          
  - build
  # - test
  # - publish
  - deploy

## commenting as of now
# build: 
#   stage: build
#   image: maven:latest
#   script: 
#     - cd backend/
#     - echo "Building Application"
#     - mvn clean package
#     - ls
#     - echo "Building Complete"
#   artifacts:
#     paths:
#       - backend/target/*.jar
#   only:
#     - develop

build-frontend:
  stage: build
  image: node:latest
  script:
    - echo "Building frontend..."
    - cd frontend  # Change to the 'frontend' directory
    - npm install -g pnpm
    - pnpm install
    - pnpm i -f
    - pnpm build
    - echo "frontend code build is completed."
  tags:
    - ecopick
  only:
    - develop
  artifacts:
    paths:
      - frontend/build/*

# test: 
#   stage: test
#   image: maven:latest
#   script: 
#     - echo "Testing backend..."
#     - cd backend
#     - mvn clean install
#     - echo "Testing backend Completed..."
#   only:
#     - develop

# publish:
#   image: docker:latest
#   stage: publish
#   tags: 
#     - ecopick
#   variables:
#     DOCKER_TLS_CERTDIR: ""
#     DOCKER_HOST: "tcp://docker:2375"
#   services:
#     - docker:dind
#   script:
#     - cd backend/
#     - pwd 
#     - ls
#     - echo $SERVER_IP
#     - docker --version
#     - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
#     - docker build -t docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA -f ./Dockerfile .
#     - docker push docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA
#   only:
#     - develop
#   dependencies: 
#     - build

# publish-frontend:
#   image: docker:latest
#   stage: publish
#   tags: 
#     - ecopick
#   variables:
#     DOCKER_TLS_CERTDIR: ""
#     DOCKER_HOST: "tcp://docker:2375"
#   services:
#     - docker:dind
#   script:
#     - cd frontend/
#     - pwd 
#     - ls
#     - echo $SERVER_IP
#     - docker --version
#     - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
#     - docker build -t docker.io/tanuj3920/ecopick-frontend:$CI_COMMIT_SHORT_SHA -f ./Dockerfile .
#     - docker push docker.io/tanuj3920/ecopick-frontend:$CI_COMMIT_SHORT_SHA
#   only:
#     - develop



# deploy:
#   image: alpine:latest
#   stage: deploy
#   tags: 
#     - ecopick
#   script:
#    - cd backend/
#    - echo "Deploying Backend..."
#    - chmod og-rwx $ID_RSA
#    - apk update && apk add openssh-client
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f ecopick-backend || true"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8080:8080 --name ecopick-backend docker.io/tanuj3920/ecopick-backend:$CI_COMMIT_SHORT_SHA"
#   only: 
#   - develop
# - echo "Deploying application..."
#     - echo "${CI_COMMIT_SHORT_SHA}.zip build"
#     - echo ""${ID_RSA}" ${CI_COMMIT_SHORT_SHA}.zip "${SERVER_USER}@${SERVER_IP}:${DEPLOY_DIR}/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}.zip""
#     - cd frontend
#     - apt-get install zip unzip
#     - chmod og-rwx $ID_RSA
#     - zip -r ${CI_COMMIT_SHORT_SHA}.zip ./build/*
#     - scp -r -o StrictHostKeyChecking=no -i "${ID_RSA}" ${CI_COMMIT_SHORT_SHA}.zip "${SERVER_USER}@${SERVER_IP}:/${CI_COMMIT_SHORT_SHA}-react.zip"
#     - echo "Application successfully deployed."

deploy-frontend:
  stage: deploy 
  before_script:
    - chmod og-rwx $ID_RSA
  script:
    - echo "Deploying application..."
    - ssh -o StrictHostKeyChecking=no -i $ID_RSA ${SERVER_USER}@${SERVER_IP} 'if [ -d /var/www/html ]; then rm -r /var/www/html/*; fi'
    - echo "Transfering Frontend Build Files"
    - scp -r -o StrictHostKeyChecking=no -i $ID_RSA frontend/build/* ${SERVER_USER}@${SERVER_IP}:/var/www/html/
    - echo "Frontend Deplyoment Complete"
  only:
    - develop
  dependencies:
    - build-frontend
  tags:
    - ecopick

# deploy-frontend:
#   stage: deploy
#   only:
#     - develop
#   before_script:
#     - chmod og-rwx $ID_RSA
#     - apk update && apk add openssh-client
#   script:
#     - echo "Deploying frontend..."
#     - cd frontend  # Change to the 'frontend' directory
#     - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
#     - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/tanuj3920/ecopick-frontend:$CI_COMMIT_SHORT_SHA"
#     - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f ecopick-frontend || true"
#     - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3000:3000 --name ecopick-frontend docker.io/tanuj3920/ecopick-frontend:$CI_COMMIT_SHORT_SHA"
#   tags:
#     - ugrad
